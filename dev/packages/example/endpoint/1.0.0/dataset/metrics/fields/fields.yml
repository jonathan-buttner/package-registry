- name: '@timestamp'
  level: core
  required: true
  type: date
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when
    the event was generated by the source.

    If the event source has no original timestamp, this value is typically populated
    by the first time the event was received by the pipeline.

    Required field for all events.'
  example: '2016-05-23T08:05:34.853Z'
- name: message
  level: core
  type: text
  description: 'For log events the message field contains the log message, optimized
    for viewing in a log viewer.

    For structured logs without an original message field, other fields can be concatenated
    to form a human-readable summary of the event.

    If multiple messages exist, they can be combined into one message.'
  example: Hello World
- name: agent
  title: Agent
  group: 2
  description: 'The agent fields contain the data about the software entity, if
    any, that collects, detects, or observes events on a host, or takes measurements
    on a host.

    Examples include Beats. Agents may also run on observers. ECS agent.* fields
    shall be populated with details of the agent running on the host or observer
    where the event happened or the measurement was taken.'
  footnote: 'Examples: In the case of Beats for logs, the agent.name is filebeat.
    For APM, it is the agent running in the app/service. The agent information does
    not change if data is sent through queuing systems like Kafka, Redis, or processing
    systems such as Logstash or APM Server.'
  type: group
  fields:
  - name: id
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Unique identifier of this agent (if one exists).

      Example: For Beats this would be beat.id.'
    example: 8a4f500d
  - name: name
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Custom name of the agent.

      This is a name that can be given to an agent. This can be helpful if for example
      two Filebeat instances are running on the same host but a human readable separation
      is needed on which Filebeat instance data is coming from.

      If no name is given, the name is often left empty.'
    example: foo
  - name: version
    level: core
    type: keyword
    ignore_above: 1024
    description: Version of the agent.
    example: 6.0.0-rc2
- name: ecs
  title: ECS
  group: 2
  description: Meta-information specific to ECS.
  type: group
  fields:
  - name: version
    level: core
    required: true
    type: keyword
    ignore_above: 1024
    description: 'ECS version this event conforms to. `ecs.version` is a required
      field and must exist in all events.

      When querying across multiple indices -- which may conform to slightly different
      ECS versions -- this field lets integrations adjust to the schema version
      of the events.'
    example: 1.0.0
- name: elastic
  title: Elastic
  group: 2
  description: Holds fields and properties of data points and concepts in the elastic
    domain or namespace.
  type: group
  fields:
  - name: agent
    level: custom
    type: object
    object_type: keyword
    description: The agent fields contain data about the Elastic Agent. The Elastic
      Agent is the management agent that manages other agents or process on the
      host.
    default_field: false
  - name: agent.id
    level: custom
    type: keyword
    ignore_above: 1024
    description: Unique identifier of this elastic agent (if one exists).
    example: c2a9093e-e289-4c0a-aa44-8c32a414fa7a
    default_field: false
- name: endpoint
  title: Endpoint
  group: 2
  description: Fields describing the state of the Elastic Endpoint when an event
    occurs.
  type: group
  fields:
  - name: policy
    level: custom
    type: object
    object_type: keyword
    description: The policy fields are used to hold information about applied policy.
    default_field: false
  - name: policy.id
    level: custom
    type: keyword
    ignore_above: 1024
    description: ID of the policy that was active when the event was created.
    example: c2a9093e-e289-4c0a-aa44-8c32a414fa7a
    default_field: false
  - name: system
    level: custom
    type: object
    object_type: keyword
    description: System fields hold the endpoint and system's performance metrics
    default_field: false
  - name: system.cpu
    level: custom
    type: object
    object_type: keyword
    description: CPU statistics
    default_field: false
  - name: system.cpu.endpoint
    level: custom
    type: object
    object_type: keyword
    description: CPU metrics for the endpoint
    default_field: false
  - name: system.cpu.endpoint.histogram
    level: custom
    type: long
    description: 20 buckets, each bucket represents the number of 5 second intervals
      that the endpoint's current CPU was in that buckets range
    default_field: false
  - name: system.cpu.endpoint.latest
    level: custom
    type: half_float
    description: Average CPU over the last 5 seconds? TODO is this right?
    default_field: false
  - name: system.cpu.endpoint.mean
    level: custom
    type: half_float
    description: Average CPU load used by the endpoint
    default_field: false
  - name: system.disks
    level: custom
    type: nested
    description: An array of disk information for the host
    default_field: false
  - name: system.disks.free
    level: custom
    type: keyword
    ignore_above: 1024
    description: The number of bytes marked as free on the disk
    default_field: false
  - name: system.disks.mount
    level: custom
    type: keyword
    ignore_above: 1024
    description: The disks mount location
    default_field: false
  - name: system.disks.total
    level: custom
    type: keyword
    ignore_above: 1024
    description: The size of the disk in bytes
    default_field: false
  - name: system.events
    level: custom
    type: object
    object_type: keyword
    description: Statistics around the number of events sent and in the backlog
    default_field: false
  - name: system.events.backlog_size
    level: custom
    type: long
    description: The number of events that still need to be sent
    default_field: false
  - name: system.events.since_start
    level: custom
    type: nested
    description: Statistics for the different kinds of events that have been sent
      by the endpoint
    default_field: false
  - name: system.events.since_start.count
    level: custom
    type: long
    description: The number of events that have been sent of this specific `event.kind`
    default_field: false
  - name: system.events.since_start.kind
    level: custom
    type: keyword
    ignore_above: 1024
    description: This indicates which kind of event these counts refer to, `event.kind`
    default_field: false
  - name: system.memory
    level: custom
    type: object
    object_type: keyword
    description: Memory statistics
    default_field: false
  - name: system.memory.endpoint
    level: custom
    type: object
    object_type: keyword
    description: Endpoint memory utilization
    default_field: false
  - name: system.memory.endpoint.private
    level: custom
    type: object
    object_type: keyword
    description: TODO is this kernel space?
    default_field: false
  - name: system.memory.endpoint.private.latest
    level: custom
    type: long
    description: TODO what is this
    default_field: false
  - name: system.memory.endpoint.private.mean
    level: custom
    type: long
    description: TODO what is this
    default_field: false
  - name: system.threads
    level: custom
    type: nested
    description: Statistics about the individual threads of the system (array)
    enabled: false
    default_field: false
  - name: system.uptime
    level: custom
    type: object
    object_type: keyword
    description: Number of seconds since boot
    default_field: false
  - name: system.uptime.endpoint
    level: custom
    type: long
    description: Number of seconds since the endpoint was started
    default_field: false
  - name: system.uptime.system
    level: custom
    type: long
    description: Number of seconds since the system was started
    default_field: false
- name: event
  title: Event
  group: 2
  description: 'The event fields are used for context information about the log
    or metric event itself.

    A log is defined as an event containing details of something that happened.
    Log events must include the time at which the thing happened. Examples of log
    events include a process starting on a host, a network packet being sent from
    a source to a destination, or a network connection between a client and a server
    being initiated or closed. A metric is defined as an event containing one or
    more numerical measurements and the time at which the measurement was taken.
    Examples of metric events include memory pressure measured on a host and device
    temperature. See the `event.kind` definition in this section for additional
    details about metric and state events.'
  type: group
  fields:
  - name: action
    level: core
    type: keyword
    ignore_above: 1024
    description: 'The action captured by the event.

      This describes the information in the event. It is more specific than `event.category`.
      Examples are `group-add`, `process-started`, `file-created`. The value is
      normally defined by the implementer.'
    example: user-password-change
  - name: category
    level: core
    type: keyword
    ignore_above: 1024
    description: 'This is one of four ECS Categorization Fields, and indicates the
      second level in the ECS category hierarchy.

      `event.category` represents the "big buckets" of ECS categories. For example,
      filtering on `event.category:process` yields all events relating to process
      activity. This field is closely related to `event.type`, which is used as
      a subcategory.

      This field is an array. This will allow proper categorization of some events
      that fall in multiple categories.'
    example: authentication
  - name: created
    level: core
    type: date
    description: 'event.created contains the date/time when the event was first
      read by an agent, or by your pipeline.

      This field is distinct from @timestamp in that @timestamp typically contain
      the time extracted from the original event.

      In most situations, these two timestamps will be slightly different. The difference
      can be used to calculate the delay between your source generating an event,
      and the time when your agent first processed it. This can be used to monitor
      your agent''s or pipeline''s ability to keep up with your event source.

      In case the two timestamps are identical, @timestamp should be used.'
    example: '2016-05-23T08:05:34.857Z'
  - name: end
    level: extended
    type: date
    description: event.end contains the date when the event ended or when the activity
      was last observed.
  - name: id
    level: core
    type: keyword
    ignore_above: 1024
    description: Unique ID to describe the event.
    example: 8a4f500d
  - name: kind
    level: core
    type: keyword
    ignore_above: 1024
    description: 'This is one of four ECS Categorization Fields, and indicates the
      highest level in the ECS category hierarchy.

      `event.kind` gives high-level information about what type of information the
      event contains, without being specific to the contents of the event. For example,
      values of this field distinguish alert events from metric events.

      The value of this field can be used to inform how these kinds of events should
      be handled. They may warrant different retention, different access control,
      it may also help understand whether the data coming in at a regular interval
      or not.'
    example: alert
  - name: module
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Name of the module this data is coming from.

      If your monitoring agent supports the concept of modules or plugins to process
      events of a given source (e.g. Apache logs), `event.module` should contain
      the name of this module.'
    example: apache
  - name: start
    level: extended
    type: date
    description: event.start contains the date when the event started or when the
      activity was first observed.
  - name: type
    level: core
    type: keyword
    ignore_above: 1024
    description: 'This is one of four ECS Categorization Fields, and indicates the
      third level in the ECS category hierarchy.

      `event.type` represents a categorization "sub-bucket" that, when used along
      with the `event.category` field values, enables filtering events down to a
      level appropriate for single visualization.

      This field is an array. This will allow proper categorization of some events
      that fall in multiple event types.'
- name: host
  title: Host
  group: 2
  description: 'A host is defined as a general computing instance.

    ECS host.* fields should be populated with details about the host on which the
    event happened, or from which the measurement was taken. Host types include
    hardware, virtual machines, Docker containers, and Kubernetes nodes.'
  type: group
  fields:
  - name: architecture
    level: core
    type: keyword
    ignore_above: 1024
    description: Operating system architecture.
    example: x86_64
  - name: geo.city_name
    level: core
    type: keyword
    ignore_above: 1024
    description: City name.
    example: Montreal
  - name: geo.continent_name
    level: core
    type: keyword
    ignore_above: 1024
    description: Name of the continent.
    example: North America
  - name: geo.country_iso_code
    level: core
    type: keyword
    ignore_above: 1024
    description: Country ISO code.
    example: CA
  - name: geo.country_name
    level: core
    type: keyword
    ignore_above: 1024
    description: Country name.
    example: Canada
  - name: geo.location
    level: core
    type: geo_point
    description: Longitude and latitude.
    example: '{ "lon": -73.614830, "lat": 45.505918 }'
  - name: geo.region_iso_code
    level: core
    type: keyword
    ignore_above: 1024
    description: Region ISO code.
    example: CA-QC
  - name: geo.region_name
    level: core
    type: keyword
    ignore_above: 1024
    description: Region name.
    example: Quebec
  - name: hostname
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Hostname of the host.

      It normally contains what the `hostname` command returns on the host machine.'
  - name: id
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Unique host id.

      As hostname is not always unique, use values that are meaningful in your environment.

      Example: The current usage of `beat.name`.'
  - name: ip
    level: core
    type: ip
    description: Host ip addresses.
  - name: mac
    level: core
    type: keyword
    ignore_above: 1024
    description: Host mac addresses.
  - name: name
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Name of the host.

      It can contain what `hostname` returns on Unix systems, the fully qualified
      domain name, or a name specified by the user. The sender decides which value
      to use.'
  - name: os.family
    level: extended
    type: keyword
    ignore_above: 1024
    description: OS family (such as redhat, debian, freebsd, windows).
    example: debian
  - name: os.full
    level: extended
    type: keyword
    ignore_above: 1024
    multi_fields:
    - name: text
      type: text
      norms: false
      default_field: false
    description: Operating system name, including the version or code name.
    example: Mac OS Mojave
  - name: os.kernel
    level: extended
    type: keyword
    ignore_above: 1024
    description: Operating system kernel version as a raw string.
    example: 4.4.0-112-generic
  - name: os.name
    level: extended
    type: keyword
    ignore_above: 1024
    multi_fields:
    - name: text
      type: text
      norms: false
      default_field: false
    description: Operating system name, without the version.
    example: Mac OS X
  - name: os.platform
    level: extended
    type: keyword
    ignore_above: 1024
    description: Operating system platform (such centos, ubuntu, windows).
    example: darwin
  - name: os.variant
    level: custom
    type: keyword
    ignore_above: 1024
    description: A string value or phrase that further aid to classify or qualify
      the operating system (OS).  For example the distribution for a Linux OS will
      be entered in this field.
    example: Ubuntu
    default_field: false
  - name: os.version
    level: extended
    type: keyword
    ignore_above: 1024
    description: Operating system version as a raw string.
    example: 10.14.1
