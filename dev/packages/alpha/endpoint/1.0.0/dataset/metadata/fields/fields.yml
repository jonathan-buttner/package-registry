- name: '@timestamp'
  level: core
  required: true
  type: date
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when
    the event was generated by the source.

    If the event source has no original timestamp, this value is typically populated
    by the first time the event was received by the pipeline.

    Required field for all events.'
  example: '2016-05-23T08:05:34.853Z'
- name: agent
  title: Agent
  group: 2
  description: 'The agent fields contain the data about the software entity, if
    any, that collects, detects, or observes events on a host, or takes measurements
    on a host.

    Examples include Beats. Agents may also run on observers. ECS agent.* fields
    shall be populated with details of the agent running on the host or observer
    where the event happened or the measurement was taken.'
  footnote: 'Examples: In the case of Beats for logs, the agent.name is filebeat.
    For APM, it is the agent running in the app/service. The agent information does
    not change if data is sent through queuing systems like Kafka, Redis, or processing
    systems such as Logstash or APM Server.'
  type: group
  fields:
  - name: id
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Unique identifier of this agent (if one exists).

      Example: For Beats this would be beat.id.'
    example: 8a4f500d
  - name: name
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Custom name of the agent.

      This is a name that can be given to an agent. This can be helpful if for example
      two Filebeat instances are running on the same host but a human readable separation
      is needed on which Filebeat instance data is coming from.

      If no name is given, the name is often left empty.'
    example: foo
  - name: version
    level: core
    type: keyword
    ignore_above: 1024
    description: Version of the agent.
    example: 6.0.0-rc2
- name: ecs
  title: ECS
  group: 2
  description: Meta-information specific to ECS.
  type: group
  fields:
  - name: version
    level: core
    required: true
    type: keyword
    ignore_above: 1024
    description: 'ECS version this event conforms to. `ecs.version` is a required
      field and must exist in all events.

      When querying across multiple indices -- which may conform to slightly different
      ECS versions -- this field lets integrations adjust to the schema version
      of the events.'
    example: 1.0.0
- name: elastic
  title: Elastic
  group: 2
  description: Holds fields and properties of data points and concepts in the elastic
    domain or namespace.
  type: group
  fields:
  - name: agent
    level: custom
    type: object
    object_type: keyword
    description: The agent fields contain data about the Elastic Agent. The Elastic
      Agent is the management agent that manages other agents or process on the
      host.
    default_field: false
  - name: agent.id
    level: custom
    type: keyword
    ignore_above: 1024
    description: Unique identifier of this elastic agent (if one exists).
    example: c2a9093e-e289-4c0a-aa44-8c32a414fa7a
    default_field: false
- name: endpoint
  title: Endpoint
  group: 2
  description: Fields describing the state of the Elastic Endpoint when an event
    occurs.
  type: group
  fields:
  - name: policy
    level: custom
    type: object
    object_type: keyword
    description: The policy fields are used to hold information about applied policy.
    default_field: false
  - name: policy.applied
    level: custom
    type: object
    object_type: keyword
    description: information about the policy that is applied
    default_field: false
  - name: policy.applied.actions
    level: custom
    type: object
    object_type: keyword
    description: actions applied during the application of the policy
    enabled: false
    default_field: false
  - name: policy.applied.actions.configure_elasticsearch_connection
    level: custom
    type: object
    object_type: keyword
    description: elastic search configuration action
    default_field: false
  - name: policy.applied.actions.configure_elasticsearch_connection.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: elastic search configuration action message
    default_field: false
  - name: policy.applied.actions.configure_elasticsearch_connection.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: elastic search configuration action status
    default_field: false
  - name: policy.applied.actions.configure_kernel
    level: custom
    type: object
    object_type: keyword
    description: configure kernel action
    default_field: false
  - name: policy.applied.actions.configure_kernel.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: configure kernel action message
    default_field: false
  - name: policy.applied.actions.configure_kernel.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: configure kernel action status
    default_field: false
  - name: policy.applied.actions.configure_logging
    level: custom
    type: object
    object_type: keyword
    description: configure logging action
    default_field: false
  - name: policy.applied.actions.configure_logging.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: configure logging action message
    default_field: false
  - name: policy.applied.actions.configure_logging.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: configure logging action status
    default_field: false
  - name: policy.applied.actions.configure_malware
    level: custom
    type: object
    object_type: keyword
    description: configure malware action
    default_field: false
  - name: policy.applied.actions.configure_malware.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: configure malware action message
    default_field: false
  - name: policy.applied.actions.configure_malware.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: configure malware action status
    default_field: false
  - name: policy.applied.actions.connect_kernel
    level: custom
    type: object
    object_type: keyword
    description: connect kernel action
    default_field: false
  - name: policy.applied.actions.connect_kernel.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: connect kernel message
    default_field: false
  - name: policy.applied.actions.connect_kernel.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: connect kernel status
    default_field: false
  - name: policy.applied.actions.detect_file_open_events
    level: custom
    type: object
    object_type: keyword
    description: detect file open action
    default_field: false
  - name: policy.applied.actions.detect_file_open_events.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect file open message
    default_field: false
  - name: policy.applied.actions.detect_file_open_events.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect file open status
    default_field: false
  - name: policy.applied.actions.detect_file_write_events
    level: custom
    type: object
    object_type: keyword
    description: detect file write events action
    default_field: false
  - name: policy.applied.actions.detect_file_write_events.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect file write events message
    default_field: false
  - name: policy.applied.actions.detect_file_write_events.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect file write events status
    default_field: false
  - name: policy.applied.actions.detect_image_load_events
    level: custom
    type: object
    object_type: keyword
    description: detect image load events action
    default_field: false
  - name: policy.applied.actions.detect_image_load_events.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect image load events message
    default_field: false
  - name: policy.applied.actions.detect_image_load_events.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect image load events status
    default_field: false
  - name: policy.applied.actions.detect_process_events
    level: custom
    type: object
    object_type: keyword
    description: detect process events action
    default_field: false
  - name: policy.applied.actions.detect_process_events.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect process events message
    default_field: false
  - name: policy.applied.actions.detect_process_events.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: detect process events status
    default_field: false
  - name: policy.applied.actions.download_global_artifacts
    level: custom
    type: object
    object_type: keyword
    description: download global artifacts action
    default_field: false
  - name: policy.applied.actions.download_global_artifacts.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: download global artifacts message
    default_field: false
  - name: policy.applied.actions.download_global_artifacts.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: download global artifacts status
    default_field: false
  - name: policy.applied.actions.load_config
    level: custom
    type: object
    object_type: keyword
    description: load config action
    default_field: false
  - name: policy.applied.actions.load_config.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: load config message
    default_field: false
  - name: policy.applied.actions.load_config.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: load malware model status
    default_field: false
  - name: policy.applied.actions.load_malware_model
    level: custom
    type: object
    object_type: keyword
    description: load malware model action
    default_field: false
  - name: policy.applied.actions.load_malware_model.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: load malware model message
    default_field: false
  - name: policy.applied.actions.load_malware_model.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: load malware model status
    default_field: false
  - name: policy.applied.actions.read_elasticsearch_config
    level: custom
    type: object
    object_type: keyword
    description: read elasticsearch config
    default_field: false
  - name: policy.applied.actions.read_elasticsearch_config.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: read elasticsearch config message
    default_field: false
  - name: policy.applied.actions.read_elasticsearch_config.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: read elasticsearch config status
    default_field: false
  - name: policy.applied.actions.read_events_config
    level: custom
    type: object
    object_type: keyword
    description: read events config
    default_field: false
  - name: policy.applied.actions.read_events_config.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: read events config message
    default_field: false
  - name: policy.applied.actions.read_events_config.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: read events config status
    default_field: false
  - name: policy.applied.actions.read_kernel_config
    level: custom
    type: object
    object_type: keyword
    description: read kernel config
    default_field: false
  - name: policy.applied.actions.read_kernel_config.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: read kernel config message
    default_field: false
  - name: policy.applied.actions.read_kernel_config.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: read kernel config status
    default_field: false
  - name: policy.applied.actions.read_logging_config
    level: custom
    type: object
    object_type: keyword
    description: read logging config
    default_field: false
  - name: policy.applied.actions.read_logging_config.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: read logging config message
    default_field: false
  - name: policy.applied.actions.read_logging_config.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: read logging config status
    default_field: false
  - name: policy.applied.actions.read_malware_config
    level: custom
    type: object
    object_type: keyword
    description: read malware config
    default_field: false
  - name: policy.applied.actions.read_malware_config.message
    level: custom
    type: keyword
    ignore_above: 1024
    description: read malware message
    default_field: false
  - name: policy.applied.actions.read_malware_config.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: read malware config status
    default_field: false
  - name: policy.applied.actions.workflow.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: workflow status
    default_field: false
  - name: policy.applied.configurations
    level: custom
    type: object
    object_type: keyword
    description: the configurations of the applied policy
    default_field: false
  - name: policy.applied.configurations.events
    level: custom
    type: object
    object_type: keyword
    description: overall event collection configuration and status of the applied
      policy
    default_field: false
  - name: policy.applied.configurations.events.concerned_actions
    level: custom
    type: keyword
    ignore_above: 1024
    description: all actions that were taken for event collection
    default_field: false
  - name: policy.applied.configurations.events.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: the overall status of event collection, this is correlated to the
      status of concerned actions  but not a simple sum of the actions
    default_field: false
  - name: policy.applied.configurations.logging
    level: custom
    type: object
    object_type: keyword
    description: overall logging configuration and status of the applied policy
    default_field: false
  - name: policy.applied.configurations.logging.concerned_actions
    level: custom
    type: keyword
    ignore_above: 1024
    description: all actions that were taken for logging
    default_field: false
  - name: policy.applied.configurations.logging.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: the overall status of logging, this is correlated to the status
      of concerned actions but  not a simple sum of the actions
    default_field: false
  - name: policy.applied.configurations.malware
    level: custom
    type: object
    object_type: keyword
    description: overall malware configuration and status of the applied policy
    default_field: false
  - name: policy.applied.configurations.malware.concerned_actions
    level: custom
    type: keyword
    ignore_above: 1024
    description: all actions that were taken for malware
    default_field: false
  - name: policy.applied.configurations.malware.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: the overall status of malware, this is correlated to the status
      of concerned actions  but not a simple sum of the actions
    default_field: false
  - name: policy.applied.configurations.streaming
    level: custom
    type: object
    object_type: keyword
    description: overall data streaming configuration and status of the applied
      policy
    default_field: false
  - name: policy.applied.configurations.streaming.concerned_actions
    level: custom
    type: keyword
    ignore_above: 1024
    description: all actions that were taken for data streaming
    default_field: false
  - name: policy.applied.configurations.streaming.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: the overall status of data streaming, this is correlated to the
      status of concerned actions  but not a simple sum of the actions
    default_field: false
  - name: policy.applied.id
    level: custom
    type: keyword
    ignore_above: 1024
    description: the id of the applied policy
    default_field: false
  - name: policy.applied.policy
    level: custom
    type: object
    object_type: keyword
    description: info of the applied policy
    default_field: false
  - name: policy.applied.policy.id
    level: custom
    type: keyword
    ignore_above: 1024
    description: the id of the applied policy
    default_field: false
  - name: policy.applied.policy.version
    level: custom
    type: keyword
    ignore_above: 1024
    description: the version of the applied policy
    default_field: false
  - name: policy.applied.response
    level: custom
    type: object
    object_type: keyword
    description: the response of actions that failed in the applied policy
    default_field: false
  - name: policy.applied.status
    level: custom
    type: keyword
    ignore_above: 1024
    description: the status of the applied policy
    default_field: false
  - name: policy.applied.version
    level: custom
    type: keyword
    ignore_above: 1024
    description: the version of this policy application
    default_field: false
  - name: policy.id
    level: custom
    type: keyword
    ignore_above: 1024
    description: ID of the policy that was active when the event was created.
    example: c2a9093e-e289-4c0a-aa44-8c32a414fa7a
    default_field: false
- name: event
  title: Event
  group: 2
  description: 'The event fields are used for context information about the log
    or metric event itself.

    A log is defined as an event containing details of something that happened.
    Log events must include the time at which the thing happened. Examples of log
    events include a process starting on a host, a network packet being sent from
    a source to a destination, or a network connection between a client and a server
    being initiated or closed. A metric is defined as an event containing one or
    more numerical measurements and the time at which the measurement was taken.
    Examples of metric events include memory pressure measured on a host and device
    temperature. See the `event.kind` definition in this section for additional
    details about metric and state events.'
  type: group
  fields:
  - name: created
    level: core
    type: date
    description: 'event.created contains the date/time when the event was first
      read by an agent, or by your pipeline.

      This field is distinct from @timestamp in that @timestamp typically contain
      the time extracted from the original event.

      In most situations, these two timestamps will be slightly different. The difference
      can be used to calculate the delay between your source generating an event,
      and the time when your agent first processed it. This can be used to monitor
      your agent''s or pipeline''s ability to keep up with your event source.

      In case the two timestamps are identical, @timestamp should be used.'
    example: '2016-05-23T08:05:34.857Z'
  - name: id
    level: core
    type: keyword
    ignore_above: 1024
    description: Unique ID to describe the event.
    example: 8a4f500d
  - name: kind
    level: core
    type: keyword
    ignore_above: 1024
    description: 'This is one of four ECS Categorization Fields, and indicates the
      highest level in the ECS category hierarchy.

      `event.kind` gives high-level information about what type of information the
      event contains, without being specific to the contents of the event. For example,
      values of this field distinguish alert events from metric events.

      The value of this field can be used to inform how these kinds of events should
      be handled. They may warrant different retention, different access control,
      it may also help understand whether the data coming in at a regular interval
      or not.'
    example: alert
- name: host
  title: Host
  group: 2
  description: 'A host is defined as a general computing instance.

    ECS host.* fields should be populated with details about the host on which the
    event happened, or from which the measurement was taken. Host types include
    hardware, virtual machines, Docker containers, and Kubernetes nodes.'
  type: group
  fields:
  - name: architecture
    level: core
    type: keyword
    ignore_above: 1024
    description: Operating system architecture.
    example: x86_64
  - name: hostname
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Hostname of the host.

      It normally contains what the `hostname` command returns on the host machine.'
  - name: id
    level: core
    type: keyword
    ignore_above: 1024
    description: 'Unique host id.

      As hostname is not always unique, use values that are meaningful in your environment.

      Example: The current usage of `beat.name`.'
  - name: ip
    level: core
    type: ip
    description: Host ip addresses.
  - name: mac
    level: core
    type: keyword
    ignore_above: 1024
    description: Host mac addresses.
  - name: os.full
    level: extended
    type: keyword
    ignore_above: 1024
    multi_fields:
    - name: text
      type: text
      norms: false
      default_field: false
    description: Operating system name, including the version or code name.
    example: Mac OS Mojave
  - name: os.name
    level: extended
    type: keyword
    ignore_above: 1024
    multi_fields:
    - name: text
      type: text
      norms: false
      default_field: false
    description: Operating system name, without the version.
    example: Mac OS X
  - name: os.variant
    level: custom
    type: keyword
    ignore_above: 1024
    description: A string value or phrase that further aid to classify or qualify
      the operating system (OS).  For example the distribution for a Linux OS will
      be entered in this field.
    example: Ubuntu
    default_field: false
  - name: os.version
    level: extended
    type: keyword
    ignore_above: 1024
    description: Operating system version as a raw string.
    example: 10.14.1
